{"version":3,"file":"index.cjs","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/ElementOverlay.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/Overlays.tsx","../../src/util/useDragEvents.ts","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Refresh.tsx","../../src/ui/VisualEditing.tsx","../../src/ui/useComlink.tsx","../../src/ui/useDatasetMutator.ts","../../src/optimistic/state/createSharedListener.ts"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingY={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n      {title && (\n        <Tab gap={1} paddingY={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      data-flipped={isNearTop ? '' : undefined}\n      data-draggable={draggable ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchSchema])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [comlink, elements])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, inPopUp, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && status !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    status,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const comlink = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlink)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          componentResolver={components}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {createNode, createNodeMachine} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): VisualEditingNode | undefined {\n  const [node, setNode] = useState<VisualEditingNode>()\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  return node\n}\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      comlink\n        .fetch('visual-editing/features', undefined, {\n          signal: featuresFetch.signal,\n          suppressWarnings: true,\n        })\n        .then((data) => {\n          if (data.features['optimistic']) {\n            setActor(mutator)\n          }\n        })\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          console.warn(\n            '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n          )\n        })\n    }, 'connected')\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n"],"names":["Object","defineProperty","exports","value","jsxRuntime","require","presentationComlink","React","ReactDOM","csm","PointerEvents","mutations","SharedStateContext","mutate","visualEditingCsm","scrollIntoView","comlink","xstate","optimistic_index","rxjs","_interopDefaultCompat","e","default","scrollIntoView__default","History","props","history","useEffect","on","data","update","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","node","doc","type","patch","async","getSnapshot","getArrayRemovePatches","getArrayInsertAction","insertType","position","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getDuplicateItem","label","icon","CopyIcon","C","action","telemetryEvent","getRemoveItems","RemoveIcon","R","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","Promise","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","f","ArrowDownIcon","h","UnpublishIcon","U","SortIcon","S","InsertMenuWrapper","parent","width","onSelect","boundaryElement","jsx","MenuGroup","M","fontSize","InsertBelowIcon","b","padding","popover","arrow","constrainSize","floatingBoundary","placement","fallbackPlacements","preventOverflow","__unstable_margins","space","text","children","InsertMenu","c","POPOVER_MARGINS","ContextMenuItem","onDismiss","sendTelemetry","useTelemetry","onClick","useCallback","MenuDivider","o","MenuItem","p","hotkeys","disabled","map","item","itemIndex","component","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","getDocument","useDocuments","u","field","useMemo","name","setItems","id","InsertAboveIcon","a","getContextMenuArrayItems","options","insertMenu","views","some","view","schemaType","of","filter","t","getNodeIcon","getContextMenuUnionItems","resolve","getContextMenuItems","contextMenuReferenceElement","getBoundingClientRect","bottom","left","right","top","height","PopoverPortal","Popover","j","open","referenceElement","content","Menu","style","minWidth","maxWidth","jsxs","Flex","F","gap","Box","flex","Text","size","Spinner","m","Stack","weight","Fragment","i","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","Root","styled","Card","Actions","Tab","ActionOpen","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","path","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","createIntentLink","previewSnapshots","usePreviewSnapshots","find","snapshot","_id","componentContext","customComponents","resolved","isValidElement","Array","isArray","useCustomComponents","dangerouslySetInnerHTML","__html","DocumentIcon","paddingY","Link","marginRight","className","DragHandleIcon","T","P","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","transform","current","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","useSyncExternalStore","onStoreChange","handlePopState","window","addEventListener","removeEventListener","as","rel","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","s","theme","useTheme_v2","radius","number","outMax","outMin","clamp","imageRects","childRects","r","tagName","textRects","$offsetX","$offsetY","q","shadow","overflow","tone","scheme","viewBox","fill","color","from","OverlayMinimapPrompt","align","Hotkeys","keys","ExpandIcon","E","elementsReducer","elements","message","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","fetchPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","resolvedTypes","setResolvedTypes","Map","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","controller","paths","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","types","reportPaths","_type","nodePath","flatMap","fieldFromPath","prevPath","next","rest","objectField","fields","get","Boolean","console","warn","store","listeners","Set","getState","setState","fn","forEach","l","listener","add","delete","createStore","SharedStateProvider","prev","key","fromEntries","entries","catch","reason","debug","TelemetryProvider","log","event","events","TelemetryContext","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","prevId","actor","useOptimisticActor","send","documentId","getDraftId","getPublishedId","OverlaysController","dispatch","inFrame","inPopUp","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","detail","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","g","arrayPath","referenceItemKey","elementValue","getFromPath","at","remove","_key","insert","customEvent","CustomEvent","cancelable","dispatchEvent","useDragEndEvents","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","useController","enabled","dragGroup","flow","cursor","removeProperty","activate","deactivate","Overlays","_componentResolver","status","setStatus","useReducer","setRootElement","setOverlayEnabled","unsubs","then","usePerspectiveSync","lastReported","reportDocuments","documents","nodes","nodeIds","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","useReportDocuments","updateDragPreviewCustomProps","setProperty","scrollY","handleClick","isHTMLAnchorElement","G","isHTMLElement","J","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","handleKeyUp","isAltKey","handleKeydown","every","MODIFIERS","toUpperCase","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","closeContextMenu","elementsToRender","getAttribute","sanityNodesExistInSameArray","ThemeProvider","studioTheme","LayerProvider","L","PortalProvider","alt","ctrl","mod","test","navigator","platform","shift","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise2","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","active","setNode","instance","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","useComlink","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","createSharedListener","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","useDatasetMutator","createPortal","displayName","useOptimistic","enumerable","createDataAttribute","createDocumentMutator","emptyActor"],"mappings":"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"}