{"version":3,"file":"index.js","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/ElementOverlay.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/Overlays.tsx","../../src/util/useDragEvents.ts","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Refresh.tsx","../../src/ui/VisualEditing.tsx","../../src/ui/useComlink.tsx","../../src/ui/useDatasetMutator.ts","../../src/optimistic/state/createSharedListener.ts"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingY={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n      {title && (\n        <Tab gap={1} paddingY={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      data-flipped={isNearTop ? '' : undefined}\n      data-draggable={draggable ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchSchema])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [comlink, elements])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, inPopUp, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && status !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    status,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const comlink = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlink)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          componentResolver={components}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {createNode, createNodeMachine} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): VisualEditingNode | undefined {\n  const [node, setNode] = useState<VisualEditingNode>()\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  return node\n}\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      comlink\n        .fetch('visual-editing/features', undefined, {\n          signal: featuresFetch.signal,\n          suppressWarnings: true,\n        })\n        .then((data) => {\n          if (data.features['optimistic']) {\n            setActor(mutator)\n          }\n        })\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          console.warn(\n            '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n          )\n        })\n    }, 'connected')\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n"],"names":["jsx","jsxs","Fragment","createCompatibilityActors","isMaybePreviewIframe","isMaybePreviewWindow","useEffect","useCallback","createContext","useContext","useState","useMemo","memo","useRef","useSyncExternalStore","isValidElement","useReducer","createPortal","createEditUrl","studioPath","getDraftId","getPublishedId","InsertAboveIcon","InsertBelowIcon","getNodeIcon","CopyIcon","RemoveIcon","SortIcon","MenuGroup","InsertMenu","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","PopoverPortal","Popover","Menu","Flex","Box","Text","Spinner","Stack","MenuDivider","useTelemetry","MenuItem","dt","Card","DragHandleIcon","PointerEvents","DocumentIcon","usePrefersDark","useTheme_v2","Hotkeys","ExpandIcon","TelemetryContext","events","ThemeProvider","studioTheme","LayerProvider","PortalProvider","isHTMLAnchorElement","isHTMLElement","useDocuments","getArrayItemKeyAndParentPath","get","getArrayInsertPatches","getArrayMovePatches","getArrayRemovePatches","getArrayDuplicatePatches","useOptimisticActorReady","useOptimisticActor","SharedStateContext","createOverlayController","sanityNodesExistInSameArray","u","at","remove","insert","pathToUrlString","createDataAttribute","scrollIntoView","createNode","createNodeMachine","createActor","createDatasetMutator","setActor","createDocumentMutator","emptyActor","ReplaySubject","Subject","merge","History","props","comlink","history","on","data","update","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","SchemaContext","useSchema","context","Error","getArrayRemoveAction","node","doc","type","patch","async","getSnapshot","getArrayInsertAction","insertType","position","getDuplicateAction","getDuplicateItem","label","icon","action","telemetryEvent","getRemoveItems","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","Promise","all","length","push","InsertMenuWrapper","parent","width","onSelect","boundaryElement","fontSize","padding","popover","arrow","constrainSize","floatingBoundary","placement","fallbackPlacements","preventOverflow","__unstable_margins","space","text","children","POPOVER_MARGINS","ContextMenuItem","onDismiss","sendTelemetry","onClick","hotkeys","disabled","map","item","itemIndex","component","Component","ContextMenu","x","y","setBoundaryElement","getField","getDocument","field","name","setItems","id","getContextMenuArrayItems","options","insertMenu","views","some","view","schemaType","of","filter","t","getContextMenuUnionItems","resolve","getContextMenuItems","contextMenuReferenceElement","getBoundingClientRect","bottom","left","right","top","height","open","referenceElement","content","style","minWidth","maxWidth","gap","flex","size","weight","i","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","Root","styled","Actions","Tab","ActionOpen","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","path","baseUrl","tool","workspace","fromString","createIntentLink","previewSnapshots","usePreviewSnapshots","find","snapshot","_id","componentContext","value","customComponents","resolved","Array","isArray","useCustomComponents","dangerouslySetInnerHTML","__html","paddingY","Link","marginRight","className","ElementOverlay","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","scrolledIntoViewRef","w","h","transform","current","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","onStoreChange","handlePopState","window","addEventListener","removeEventListener","as","rel","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","theme","radius","number","outMax","outMin","clamp","imageRects","childRects","r","tagName","textRects","$offsetX","$offsetY","shadow","overflow","tone","scheme","viewBox","fill","color","from","OverlayMinimapPrompt","align","keys","elementsReducer","elements","message","e","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","fetchPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","resolvedTypes","setResolvedTypes","Map","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","controller","paths","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","p","types","reportPaths","_type","nodePath","flatMap","fieldFromPath","prevPath","next","rest","objectField","fields","Boolean","console","warn","store","listeners","Set","getState","setState","fn","forEach","l","listener","add","delete","createStore","SharedStateProvider","prev","key","Object","fromEntries","entries","catch","reason","debug","TelemetryProvider","log","event","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","prevId","actor","send","documentId","OverlaysController","dispatch","inFrame","inPopUp","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","detail","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","arrayPath","referenceItemKey","elementValue","getFromPath","_key","customEvent","CustomEvent","cancelable","dispatchEvent","useDragEndEvents","overlayController","optimisticActorReady","overlayElement","destroy","useController","enabled","dragGroup","flow","cursor","removeProperty","activate","deactivate","Overlays","_componentResolver","status","setStatus","setRootElement","setOverlayEnabled","unsubs","then","usePerspectiveSync","lastReported","reportDocuments","documents","nodes","s","nodeIds","a","b","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","useReportDocuments","updateDragPreviewCustomProps","setProperty","scrollY","handleClick","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","handleKeyUp","isAltKey","handleKeydown","every","MODIFIERS","toUpperCase","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","closeContextMenu","elementsToRender","getAttribute","alt","ctrl","mod","test","navigator","platform","shift","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise2","VisualEditing","components","portal","setInFrame","setInPopUp","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","active","setNode","instance","connectTo","provide","actors","stop","start","useComlink","incomingConnection$","incomingMutations$","createSharedListener","datasetMutator","mutator","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","useDatasetMutator","displayName"],"mappings":"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"}