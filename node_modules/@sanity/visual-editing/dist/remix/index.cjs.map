{"version":3,"file":"index.cjs","sources":["../../src/remix/VisualEditing.tsx"],"sourcesContent":["import {lazy, Suspense, useSyncExternalStore} from 'react'\nimport type {VisualEditingProps} from './VisualEditingComponent'\n\nconst VisualEditingComponent = lazy(() => import('./VisualEditingComponent'))\n\nconst subcribe = () => () => {}\n\n/**\n * @public\n */\nexport function VisualEditing(props: VisualEditingProps): React.JSX.Element | null {\n  const mounted = useSyncExternalStore(\n    subcribe,\n    () => true,\n    () => false,\n  )\n\n  // Don't render Suspense while hydration, this enables compatibility with React v17 apps\n  // where Suspense where a browser-only API\n  if (!mounted) {\n    return null\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <VisualEditingComponent {...props} />\n    </Suspense>\n  )\n}\n"],"names":["Object","defineProperty","exports","value","jsxRuntime","require","React","visualEditingCsm","VisualEditingComponent","lazy","Promise","resolve","then","subcribe","enumerable","get","createDataAttribute","VisualEditing","props","useSyncExternalStore","jsx","Suspense","fallback","children"],"mappings":"aAGAA,OAAAC,eAAAC,QAAA,aAAA,CAAAC,OAAA,IAAA,IAAAC,EAAAC,QAAA,qBAAAC,EAAAD,QAAA,SAAAE,EAAAF,QAAA,8BAAA,MAAMG,EAAyBC,QAAK,IAAMC,QAAAC,UAAAC,MAAA,WAAA,OAAAP,QAAO,6CAA0B,MAErEQ,EAAW,IAAM,OAuBvBb,OAAAC,eAAAC,QAAA,sBAAA,CAAAY,YAAA,EAAAC,IAAA,WAAA,OAAAR,EAAAS,mBAAA,IAAAd,QAAAe,cAlBO,SAAuBC,GACZ,OAAAC,EAAAA,qBACdN,GACA,KAAM,IACN,KAAM,mBAULT,EAAAgB,IAAAC,EAAAA,SAAA,CAASC,SAAU,KAClBC,8BAACf,EAAwB,IAAGU,MALvB,IAQX"}